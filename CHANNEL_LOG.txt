================================================================================

                                CHANNEL LOG FILE

================================================================================

Date:       2024-10-15
Author:     mc
Version:    1.0
Description:
-  https://github.com/mmclinton/nix
-  This log records all channel activities, updates, and significant changes for 
    reference and auditing.

Key:
-  COMMIT    : General commit information message
-  INITIAL   : Initial commit
-  NOTE      : A general purpose note

TODO:
    1. vscode config files need to be uploaded and configured
    2. grub/bootloader needs to be configured and customized
    3. ensure compatibility with nix-shells and vscode (currently testing)

START OF LOG ENTRIES
--------------------------------------------------

20911 - COMMIT
    2024-10-25:
        I moved the 'home-manager.backupFileExtension' option to the 
        configuration.nix file. It being in the flake was not resolving 
        collisions correctly. I tested it in the config file and it worked 
        perfectly. Also, I added some example 'home.file' options for testing. 
        I allowed home-manager to place my kitty configurations where they 
        belong. It works as intended, also. That said, it was not perfect. I 
        noticed that I cannot modify my kitty theme using 'kitty +kittens theme'
        to change themes. I must alter the file within my dotfiles dir in ~/nix.
        Talk about annoying. I will keep experimenting with a fix. Future 
        commits will be me placing additional files under the home.file option.

19182 - COMMIT
    2024-10-24:
        I added a Nixos-related banner to the README as well as a description.
        Also, I added a package or two. 

17453 - COMMIT
    2024-10-23:
        I removed user-space programming languages and dependencies to their own
        respective shells configurations. Python, go, and rust each have their 
        own nix-shell configs and aliases now. Also, I added a new package and
        option for fish. Fish did not have a visual que for when you were in a 
        nix-shell. This option and package allows for you to know when you are
        in one now. 

15724 - COMMIT
    2024-10-20:
        I added some basic configuration settings in home-manager. I also added
        home-manager into my flake. This was primarily a test to see if I could
        correctly configure some basic settings like icon themes, gtk themes,
        etc. I also added video driver related settings in hardware. I added
        graphics/gaming related settings like opengl, steam, and gamemode.
        Almost all of them were simple 'enable = true' commands. 

13995 - COMMIT
    2024-10-19:
        I added gnome extensions. These are not enabled by default. Also, in an
        attempt to make rust development smoother, and without error, I have 
        added a development shell and an accompanying .toml file for rust in 
        /modules/rust. I find this to be sub par and extremely confusing. I have
        had issues with Openssl, and this is part of the attempt to circumvent. 

12266 - COMMIT
    2024-10-18:
        I have succumbed after many attempts to rectify the default shell
        assignment via home-manager. I cannot get home-manager to set my default
        shell to fish. In order to obtain a login shell of fish, I had to keep
        my fish config within configuration.nix. This commit is largely me 
        moving items around to accomplish this goal. 

10537 - COMMIT
    2024-10-17:
        I finally got the home.nix to import and use the dotfiles/fish.nix file.
        That said, there was an error when building due to the order of
        operations of execution. It warned me that programs.fish.enable was not
        set to true and that the user's shell was set to fish. In reality, the 
        fish.nix does have that option set to true, but it appears the fish 
        config was not being read until after Nixos wanted to establish my shell
        as fish. I could not immediately think of a fix. That said, I moved the
        one-liner enable option from the fish.nix file to 
        programs/programs-enable where all my one-liners live. That worked.

8808 - NOTE
    2024-10-17:
        There was an error rebuilding from home-manager. I am not sure yet how 
        to resolve. Here is a peak at the error: 
            home-manager-mc.service: Main process exited, code=exited, status=1/
            FAILURE
            home-manager-mc.service: Failed with result 'exit-code'.
            Failed to start Home Manager environment for mc.

        How I fixed it, at least temporarily, is by removing the home-manager 
        import of the fish.nix file and adding the import to the long list in 
        the flake.nix file. The conflict was gone and the system rebuilt 
        successfully. This, at least to me, seems incorrect. It makes more sense
        to have personally configuration imported by home-manager. 

8808 - COMMIT
    2024-10-17:
        I removed the file nixos/modules/programs/fish.nix to a newly created 
        directory, nixos/modules/dotfiles. As the directory's name suggest, this
        is a where I will place my dotfiles. Since the fish.nix now contains my
        personal configuration from config.fish, I moved the file to a more 
        appropriate directory. Previously it only contained nix related program
        option. If this builds correctly, I will slowly migrate other dotfiles.

7079 - COMMIT
    2024-10-17:
        I resolved a package collision between cargo and rustup. In other words,
        I am a noob who did not realize that rustup included the cargo tool. 
        Also, I moved my all of my user packages found in configuration.nix to 
        the new home.nix. This is a small step towards a larger goal of creating
        a comprehensive home.nix configuration. 

5350 - NOTE
    2024-10-17:
        Turns out, next check does not detect collisions between packages, it is
        only going to check things like syntax and if it can be built in 
        isolation. 

5350 - COMMIT
    2024-10-17:
        I am testing home-manager by adding rust and cargo as a package within
        to see if it builds properly. If it does, I will move the home packages
        from the original configuration file to the home-manager. Running nix 
        check on my flake returns no error, but I have yet to build up the trust
        for that yet.

3621 - COMMIT
    2024-10-15:
        I altered the flake.nix 'nixosConfiguration' attribute to be more 
        accommodating for adding future keys like "laptop" or "macos". 

1892 - COMMIT
    2024-10-15:
        I moved the flake.nix and flake.lock to the root of the repository. I 
        was unable to rebuild remotely using those files in the nixos directory.
        I also added this channelog. I modified the README.md to see if I was 
        able to rebuild if the branch was dirty. I think I was, but faced a 
        significant problem when trying to rebuild after moving the flake files.
        This commit will test if I am able to rebuild after pushing a commit.

163 - INITIAL
    2024-10-15:
        The initial commit for this nix repository. The aim of this
        repository is to aggregate my nix-related configurations into a unified
        structure. I will continue to alter, fix, and build upon these 
        configurations. This is the channelog of such efforts. This commit only
        contained the initial README.md and LICENSE files.
