================================================================================

                                CHANNEL LOG FILE

================================================================================

Date:       2024-10-15
Author:     mc
Version:    1.0
Description:
-  https://github.com/mmclinton/nix
-  This log records all channel activities, updates, and significant changes for 
    reference and auditing.

Key:
-  CORRECTION : A basic correction of a previous commit
-  COMMIT     : General commit information message
-  INITIAL    : Initial commit
-  NOTE       : A general purpose note

TODO:
    1. [WIP] vscode config files need to be uploaded and configured
    3. Darwin needs to be configured and implemented
    4. The remaining dotfiles need to be migrated into home-manager

START OF LOG ENTRIES
--------------------------------------------------

41659 - COMMIT
    2024-12-27:
        I added the gnumeric package for easy xls to csv conversion using thier
        ssconvert tool. I also added some default python packages that I use 
        regularly. 

39930 - COMMIT
    2024-12-18:
        I updated the flake packages. I also created a systemd login service.

38201 - COMMIT
    2024-11-26:
        Why the hell was my path '~/go/bin/'? I changed that to be something 
        more typical like '/usr/local/bin/'. I noticed this when working on my
        fomc-archiver project. I cannot reason how this happened, but its fixed.

36472 - CORRECTION
    2024-11-26:
        I forgot to add a ';' to the previous commit for the fomc fish alias.

36472 - COMMIT
    2024-11-25:
        I updated my rust-shell configuration. I simplified the configuration a
        bit. I was struggling to build my 'fomc-archiver' project, and after a 
        lot of tinkering, I have discovered that in the shell hook, calling 
        'exec fish' was somehow messing with my rust builds. I removed that and
        all works fine. I also removed some openssl related items in favor of 
        the recommmended ones on the Nixos wiki. I have not had to build 
        anything that depends on openssl, so only time will tell. 

34743 - COMMIT
    2024-11-13:
        I updated my rust-shell to properly configure a dependency I was using,
        openssl. I was having issues where pkg-config was not properly finding
        it, so I added explicit paths and instructions in the rust shell file. 
        Also, I added the cron package to my config. Last but not least, I added
        an alias to my nixos configuration to my flake.nix file, replacing 
        'default' with 'nimbus'.

33014 - COMMIT
    2024-11-09:
        Per the recommendation of a Nixos contributor in Discord, I have 
        changed the name of my config to "nimbus" from "default" to allow for
        personalization between devices. Right now, there is only one host, 
        but eventually I will add my macos config. I also added some vscode 
        related nix files. These were my user settings and my favorite theme.

31285 - COMMIT
    2024-11-08:
        I updated the flake. Despite a merged PR for 'ivpn-service', it does
        not build for me. I am without ivpn until then. The pr was to build 
        ivpn with go 1.22 instead of go 1.23 where --replace is deprecated.

29556 - NOTE
    2024-11-05:
        I submitted another commit under the same name to correct the pull
        request that was made with a message not adhering to the standard that
        I have been using. I created a new branch when reaching out to the
        Nixos community for help. When I merged it, it was named differently
        than normal. Thus, I am submitting another commit under 29556 by 
        simply adding an extra space on each affected file. 

29556 - COMMIT
    2024-11-05:
        In an attempt to reconcile and error I was receiving when attempting to 
        invoke the nix flake update command followed by the rebuild switch 
        command, I am making this commit. It is untested. I am committing it 
        because I cannot  be certain if the dirty git tree is interfering with 
        the ability to udpate the flake. A note will be posted if updating the 
        flake and committing the changes does not resolve the error I am having
        with the ivpn packages. 

27827 - COMMIT
    2024-11-04:
        I updated the license to a GLWTS license which aligns better overall
        with the project's goals and mission statement.

26098 - COMMIT
    2024-11-03:
        I added a few basic packages for a better terminal experience. These
        include "bat", "figlet", and "chafa".

24369 - COMMIT
    2024-11-02:
        I created a new shell.nix and accompanying shell aliases for ruby and 
        jekyll. These tools are to manage my personal website.

22640 - COMMIT
    2024-10-27:
        I completed the grub/bootloader task. We are now booting into grub 2 
        with a custom catpuccin theme. I tested it out and it worked as it was
        supposed to. Also, I added and moved some theme related files around. I
        am in the process of slowly converting all of my dotfiles to nix files.
        The only downside, that I can see, is that they are read only. The 
        configs are applied, but only changed via the nix file. For instance, 
        kitty cannot auto change your theme and update the default 
        current-them.conf file. You must do so on your own fruition through the
        nix file. That is the meat of this commit. 

20911 - NOTE
    2024-10-27:
        Take note that the system icons, despite being set to "Kora", are not
        being properly set, and are reverting upon every build switch. Maybe I 
        will be able to reference the package itself? I am unsure since it has
        variants. For now, I have commented out the theme. 

20911 - COMMIT
    2024-10-25:
        I moved the 'home-manager.backupFileExtension' option to the 
        configuration.nix file. It being in the flake was not resolving 
        collisions correctly. I tested it in the config file and it worked 
        perfectly. Also, I added some example 'home.file' options for testing. 
        I allowed home-manager to place my kitty configurations where they 
        belong. It works as intended, also. That said, it was not perfect. I 
        noticed that I cannot modify my kitty theme using 'kitty +kittens theme'
        to change themes. I must alter the file within my dotfiles dir in ~/nix.
        Talk about annoying. I will keep experimenting with a fix. Future 
        commits will be me placing additional files under the home.file option.

19182 - COMMIT
    2024-10-24:
        I added a Nixos-related banner to the README as well as a description.
        Also, I added a package or two. 

17453 - COMMIT
    2024-10-23:
        I removed user-space programming languages and dependencies to their own
        respective shells configurations. Python, go, and rust each have their 
        own nix-shell configs and aliases now. Also, I added a new package and
        option for fish. Fish did not have a visual que for when you were in a 
        nix-shell. This option and package allows for you to know when you are
        in one now. 

15724 - COMMIT
    2024-10-20:
        I added some basic configuration settings in home-manager. I also added
        home-manager into my flake. This was primarily a test to see if I could
        correctly configure some basic settings like icon themes, gtk themes,
        etc. I also added video driver related settings in hardware. I added
        graphics/gaming related settings like opengl, steam, and gamemode.
        Almost all of them were simple 'enable = true' commands. 

13995 - COMMIT
    2024-10-19:
        I added gnome extensions. These are not enabled by default. Also, in an
        attempt to make rust development smoother, and without error, I have 
        added a development shell and an accompanying .toml file for rust in 
        /modules/rust. I find this to be sub par and extremely confusing. I have
        had issues with Openssl, and this is part of the attempt to circumvent. 

12266 - COMMIT
    2024-10-18:
        I have succumbed after many attempts to rectify the default shell
        assignment via home-manager. I cannot get home-manager to set my default
        shell to fish. In order to obtain a login shell of fish, I had to keep
        my fish config within configuration.nix. This commit is largely me 
        moving items around to accomplish this goal. 

10537 - COMMIT
    2024-10-17:
        I finally got the home.nix to import and use the dotfiles/fish.nix file.
        That said, there was an error when building due to the order of
        operations of execution. It warned me that programs.fish.enable was not
        set to true and that the user's shell was set to fish. In reality, the 
        fish.nix does have that option set to true, but it appears the fish 
        config was not being read until after Nixos wanted to establish my shell
        as fish. I could not immediately think of a fix. That said, I moved the
        one-liner enable option from the fish.nix file to 
        programs/programs-enable where all my one-liners live. That worked.

8808 - NOTE
    2024-10-17:
        There was an error rebuilding from home-manager. I am not sure yet how 
        to resolve. Here is a peak at the error: 
            home-manager-mc.service: Main process exited, code=exited, status=1/
            FAILURE
            home-manager-mc.service: Failed with result 'exit-code'.
            Failed to start Home Manager environment for mc.

        How I fixed it, at least temporarily, is by removing the home-manager 
        import of the fish.nix file and adding the import to the long list in 
        the flake.nix file. The conflict was gone and the system rebuilt 
        successfully. This, at least to me, seems incorrect. It makes more sense
        to have personally configuration imported by home-manager. 

8808 - COMMIT
    2024-10-17:
        I removed the file nixos/modules/programs/fish.nix to a newly created 
        directory, nixos/modules/dotfiles. As the directory's name suggest, this
        is a where I will place my dotfiles. Since the fish.nix now contains my
        personal configuration from config.fish, I moved the file to a more 
        appropriate directory. Previously it only contained nix related program
        option. If this builds correctly, I will slowly migrate other dotfiles.

7079 - COMMIT
    2024-10-17:
        I resolved a package collision between cargo and rustup. In other words,
        I am a noob who did not realize that rustup included the cargo tool. 
        Also, I moved my all of my user packages found in configuration.nix to 
        the new home.nix. This is a small step towards a larger goal of creating
        a comprehensive home.nix configuration. 

5350 - NOTE
    2024-10-17:
        Turns out, next check does not detect collisions between packages, it is
        only going to check things like syntax and if it can be built in 
        isolation. 

5350 - COMMIT
    2024-10-17:
        I am testing home-manager by adding rust and cargo as a package within
        to see if it builds properly. If it does, I will move the home packages
        from the original configuration file to the home-manager. Running nix 
        check on my flake returns no error, but I have yet to build up the trust
        for that yet.

3621 - COMMIT
    2024-10-15:
        I altered the flake.nix 'nixosConfiguration' attribute to be more 
        accommodating for adding future keys like "laptop" or "macos". 

1892 - COMMIT
    2024-10-15:
        I moved the flake.nix and flake.lock to the root of the repository. I 
        was unable to rebuild remotely using those files in the nixos directory.
        I also added this channelog. I modified the README.md to see if I was 
        able to rebuild if the branch was dirty. I think I was, but faced a 
        significant problem when trying to rebuild after moving the flake files.
        This commit will test if I am able to rebuild after pushing a commit.

163 - INITIAL
    2024-10-15:
        The initial commit for this nix repository. The aim of this
        repository is to aggregate my nix-related configurations into a unified
        structure. I will continue to alter, fix, and build upon these 
        configurations. This is the channelog of such efforts. This commit only
        contained the initial README.md and LICENSE files.
